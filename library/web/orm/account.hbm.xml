<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<class name="com.library.domain.Account" table="account">
		<id name="id" column="account_id">
			<generator class="increment">
			</generator>
		</id>
		<property name="accountNumber"  column="account_nb"/>	
		<property name="startDate"  column="start_datetime" update="false"/>
		<property name="endDate"  column="end_datetime"/>
		<many-to-one name="accountType" class="com.library.domain.AccountType"
			lazy="false" update="false">
			<column name="account_type_id"/>
		</many-to-one>
		<many-to-one name="contact" class="com.library.domain.Contact"
			lazy="false">
			<column name="contact_id"/>
		</many-to-one>
		<property name="activeFlag"  column="active_flag"/>
		<many-to-one name="fee" class="com.library.domain.Fee"
			lazy="false">
			<column name="fee_id"/>
		</many-to-one>
		<property name="updatedBy"  column="updated_by"/>
		<property name="updatedDate"  column="updated_datetime"/>
	</class>
	<sql-query name="fetchAccount">
		<return class="com.library.domain.Account"/>
		<![CDATA[
			select * from account where account_nb = :accountNumber
		]]>
	</sql-query>	
	<sql-query name="fetchAccounts">
		<return class="com.library.domain.Account"/>
		<![CDATA[
			select a.* from account a, contact c where a.contact_id = c.contact_id and (lower(c.first_name) like :pattern or lower(c.last_name) like :pattern)
		]]>
	</sql-query>		
</hibernate-mapping>